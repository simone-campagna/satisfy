#!/usr/bin/env satisfy

[begin] [[[
Solve the following cryptarithm:

   AB * C == DBE
    +   -      -
  FCB / B ==  AG
  ______________

  DDA + G == DDH

where A, B, C, D, E, F, G, H are different digits.

]]]

# Define a python function to compute a number given its digits:
[define:digits] [[[
def digits(*values, base=10):
    b = 1
    value = 0
    for digit in reversed(values):
        value += b * digit
        b *= base
    return value
]]]

# Define problem variables with their domain:
A, B, C, D, E, F, G, H :: [0:9]

# Define useful macros:
AB :=  digits(A, B, base=10)
DBE := digits(D, B, E)
FCB := digits(F, C, B)
AG :=  digits(A, G)
DDA := digits(D, D, A)
DDH := digits(D, D, H)

# Solution output:
[solution] [[[
=== solution [{_COUNT:2d}]:

    {AB} * {C} == {DBE}
     +   -      -
   {FCB} / {B} ==  {AG}
   ______________

   {DDA} + {G} == {DDH}

]]]

# constraints:
all_different(A, B, C, D, E, F, G, H)

# horizontal:
AB * C == DBE
FCB / B ==  AG
DDA + G == DDH

# vertical:
AB + FCB == DDA
C - B == G
DBE - AG == DDH
